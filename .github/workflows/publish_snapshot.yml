# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Publish Snapshots

on:
  push:
    branches: [ "1.20" ]
  workflow_dispatch: 
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 20
      uses: actions/setup-java@v4
      with:
        java-version: '20'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582
    - name: Modify permission settings
      run: chmod +x ./gradlew
    - name: Read mod version from properties
      id: read_property
      uses: christian-draeger/read-properties@1.1.1
      with:
        path: './gradle.properties'
        properties: 'mod_version'
    - name: Run data generation
      run: ./gradlew runData -Pmod_version="${{steps.read_property.outputs.mod_version}}-snapshot${{github.run_number}}"
    - name: Run build jar
      run: ./gradlew jar -Pmod_version="${{steps.read_property.outputs.mod_version}}-snapshot${{github.run_number}}"
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}-binary
        path: build/libs/*.jar
        if-no-files-found: error
        overwrite: true
    - name: Download cosmaven from github
      run: wget https://github.com/TeamMoegMC/CosMavenProxy/releases/latest/download/cosmavenproxy.jar
    - name: Publish to cos maven
      shell: bash
      env:
        COS_KEY: ${{ secrets.COS_SECRETKEY }}
        COS_ID: ${{ secrets.COS_SECRETID }}
      run: |
        java -DCOS_SECRETID="$COS_ID" -DCOS_SECRETKEY="$COS_KEY" -Dport=9999 -jar cosmavenproxy.jar &
        ./gradlew publishMavenJavaPublicationToCOSRepository -Pmod_version="${{steps.read_property.outputs.mod_version}}-snapshot${{github.run_number}}"
  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 20
      uses: actions/setup-java@v4
      with:
        java-version: '20'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
